DELIMITERS = "<።>" "<!>" "<?>" "<¶>";

LIST NOM = N PRON DET PROPN ;
LIST NMOD = REL ADJ DET NUM GEN ;
LIST HELPING = AUX "ነበረ" "ሆነ" ;
LIST PERSON = 1 2 3 ;
LIST GENDER = FEM MASC ;
LIST NUMBER = SG PL ;
LIST ROOTV = (V MAIN) (V IMP) ;
# አድርጎ ያደርግ
LIST VAUX = (V V.CVB) (V I_PART) ;

### ROOT

MAP (@ROOT) ROOTV
    (1 (<<<)) ;

MAP (@ROOT) VAUX
    (1 (AUX) LINK 1 (<<<)) ;

# With final ነው AUX, the preceding word is the head.
MAP (@ROOT) (*)
    (1 ("ነው"))
    (2 (<<<)) ;

# In medial verb cleft sentences the copula is not final
# What precedes it is the root, but prevent this if there is a later main verb,
# which could happen if there is a quoted part.
MAP (@ROOT) (*)
    (1 ("ነው"))
    (NOT 2* ROOTV) ;

## Make nodes with @ROOT the actual root.
SETPARENT (@ROOT) TO (@0 (*)) ;

# (Inverted) cleft sentences
# Relative verb last preceded by copula
MAP (@CLEFT) (RELC)
    (1 (<<<))
    (-1* ("ነው")) ;

# "Pseudo-cleft" sentences: relative clause precedes copula
MAP (@PSEUDOCLEFT) (RELC)
    (1* ("ነው") LINK 1 (<<<)) ;

## noun modifiers; %% figure out how to do these
#SETPARENT (RELC) TO (1 (N)) ;

# relative clause followed by noun, which is not followed by copula
#ADDRELATION (acl:rc) (RELC) TO (1 (N) LINK 1 ("ነው")) ;

#SETPARENT (ADJ) TO (1 (N)) ;

#ADDRELATION (amod) (ADJ) TO (1 (N)) ;

# final cleanup: attach nodes without parents to root (0)
#SETPARENT (*) (NEGATE p (*)) TO (@0 (*)) ;

### Simple relations from @ROOT

## Final punctuation.
ADDRELATION (punct) (@ROOT) TO (1* (PUNCT)) ;

## Copula
ADDRELATION (cop) (@ROOT) TO (1 ("ነው")) ;

## Cleft sentence: subject to relative clause.
# ወንድሜን(root) ነው(cop) ያገኘሁት(nsubj:cleft;@CLEFT)
ADDRELATION (nsubj:cleft) (@ROOT) TO (1* (@CLEFT)) ;

# ያገኘሁት(nsubj;@PSEUDOCLEFT) ወንድሜን(root) ነው (cop)
ADDRELATION (nsubj) (@ROOT) TO (-1* (@PSEUDOCLEFT)) ;
